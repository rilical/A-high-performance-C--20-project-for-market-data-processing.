// *** AUTOGENERATED â€“ DO NOT EDIT (run: python codegen/generate.py) ***

#pragma once

#include "messages.hpp"
#include <string>

{% set ns_parts = protocol.split('_') %}
{% if ns_parts|length > 1 %}
namespace {{ ns_parts[0] }} { namespace {{ ns_parts[1] }} { namespace v{{ version }} {
{% else %}
namespace {{ protocol }} { namespace v{{ version }} {
{% endif %}

{% for msg in model.messages %}
std::string to_json(const {{ msg.name }}& m);
bool from_json(const std::string& json, {{ msg.name }}& out); // minimal stub
{% endfor %}

{% if ns_parts|length > 1 %}
}  // namespace v{{ version }}
}  // namespace {{ ns_parts[1] }}
}  // namespace {{ ns_parts[0] }}
{% else %}
}  // namespace v{{ version }}
}  // namespace {{ protocol }}
{% endif %}
